import type { LegendItem } from '@/components/Visualizer';
import type { DataStructureConfig } from '../types';

export const CODE_LINES = [
  'class Node {',
  '  constructor(value) {',
  '    this.value = value;',
  '    this.next = null;',
  '  }',
  '}',
  '',
  'class LinkedList {',
  '  constructor() {',
  '    this.head = null;',
  '  }',
  '',
  '  insertAtBeginning(value) {',
  '    const newNode = new Node(value);',
  '    newNode.next = this.head;',
  '    this.head = newNode;',
  '  }',
  '',
  '  insertAtEnd(value) {',
  '    const newNode = new Node(value);',
  '    if (!this.head) {',
  '      this.head = newNode;',
  '      return;',
  '    }',
  '    let current = this.head;',
  '    while (current.next) {',
  '      current = current.next;',
  '    }',
  '    current.next = newNode;',
  '  }',
  '',
  '  delete(value) {',
  '    if (!this.head) return;',
  '    if (this.head.value === value) {',
  '      this.head = this.head.next;',
  '      return;',
  '    }',
  '    let current = this.head;',
  '    while (current.next && current.next.value !== value) {',
  '      current = current.next;',
  '    }',
  '    if (current.next) {',
  '      current.next = current.next.next;',
  '    }',
  '  }',
  '',
  '  search(value) {',
  '    let current = this.head;',
  '    while (current) {',
  '      if (current.value === value) {',
  '        return current;',
  '      }',
  '      current = current.next;',
  '    }',
  '    return null;',
  '  }',
  '}',
];

export const LEGEND_ITEMS: LegendItem[] = [
  { color: 'bg-blue-500', label: 'Node' },
  { color: 'bg-green-500', label: 'Head' },
  { color: 'bg-purple-500', label: 'Current Operation' },
  { color: 'bg-red-500', label: 'Deleting' },
];

export const LINKED_LIST_CONFIG: DataStructureConfig = {
  initialSize: 5,
  minValue: 1,
  maxValue: 99,
};
